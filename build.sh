#!/bin/bash
FORCE=0
while test $# -gt 0; do
  case "$1" in
    -f|--f|--force)
	  FORCE=1
	  break
      ;;
    *)
      break
      ;;
  esac	
done

if [ -z ${OS+x} ]; then
    echo -e "Env OS not set, assuming osx"
    OS="osx"
fi

#
# prereqs
yarn install

#
# clean
rm -rf ./tmp/ ./generated/
mkdir -p ./generated/.vim/colors

#
# easy dotfiles
cp dotfiles/.screenrc generated

#
# theming
echo "generating themes..."
THEME="./misc/themes/monogreen-v5.colors"
# THEME="./misc/themes/themer-default.colors"
./node_modules/.bin/themer -t themer-wallpaper-block-wave -t themer-vim -t themer-xresources -c $THEME -o tmp/
cp tmp/themer-vim/ThemerVim.vim ./generated/.vim/colors

#
# concat X config and generated xresources theme
while read line
do
  echo $line >> ./generated/.Xresources
done < ./dotfiles/.Xresources
while read line
do
  echo $line >> ./generated/.Xresources
done < ./tmp/themer-xresources/themer-xresources-dark/.Xresources

set -e

#
# vim
function appendVimComment() {
  printf "\"\n\" $1\n" >> $VRC
}


VRC=./vim/.vimrc
VIMFILES=$HOME/.vim
V=./vim/$OS
:>$VRC
appendVimComment "Generated by github.com/therealplato/plato-dotfiles/vim/build.sh"

appendVimComment "sensible.vim"
cat $V/sensible.vim >> $VRC

appendVimComment "plugins.vimrc"
cat $V/plugins.vimrc >> $VRC

appendVimComment "config.vimrc"
cat $V/config.vimrc >> $VRC

appendVimComment "ui.vimrc"
cat $V/ui.vimrc >> $VRC

appendVimComment "binds.vimrc"
cat $V/binds.vimrc >> $VRC

appendVimComment "go.vimrc"
cat $V/go.vimrc >> $VRC

if [ "$OS" = "osx" ]; then
  appendVimComment "osx.vimrc"
  cat $V/osx.vimrc >> $VRC
fi

echo "generated $(wc -l $VRC | grep -Eo ^[0-9]+) lines of vimrc"

if [ $FORCE -eq 1 ]; then
  if [ "$OS" = "windows" ]; then
    cp -vi $VRC $HOME/_vimrc
  else
    cp -vi $VRC $HOME/.vimrc
  fi
  echo "copied vimrc"
  cp -vir ./generated/.vim/colors $VIMFILES
  echo "copied vim colorscheme"
  cp -vi ./generated/.Xresources $HOME
  echo "copied .Xresources, consider xrdb merge ~/.Xresources"
fi
